{"ast":null,"code":"var _jsxFileName = \"/home/manish/game/src/components/Carousel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./Carousel.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CarouselItem = _ref => {\n  let {\n    children,\n    width\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel-item\",\n    style: {\n      width: width\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = CarouselItem;\nconst Carousel = _ref2 => {\n  _s();\n  let {\n    children\n  } = _ref2;\n  const [activeIndex, setActiveIndex] = useState(0);\n  const updateIndex = newIndex => {\n    if (newIndex < 0) {\n      newIndex = 0;\n    } else if (newIndex >= React.Children.count(children)) {\n      newIndex = React.Children.count(children) - 1;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"carousel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inner\",\n      style: {\n        transform: `translateX(-${activeIndex * 100}%`\n      },\n      children: React.Children.map(children, (child, index) => {\n        return /*#__PURE__*/React.cloneElement(child, {\n          width: \"100%\"\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"indicators\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateIndex(activeIndex - 1),\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => updateIndex(activeIndex + 1),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Carousel, \"rd+5N/MkYjuYD0I+B+MlySxQysU=\");\n_c2 = Carousel;\nexport default Carousel;\nvar _c, _c2;\n$RefreshReg$(_c, \"CarouselItem\");\n$RefreshReg$(_c2, \"Carousel\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CarouselItem","_ref","children","width","className","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","Carousel","_ref2","_s","activeIndex","setActiveIndex","updateIndex","newIndex","Children","count","transform","map","child","index","cloneElement","onClick","_c2","$RefreshReg$"],"sources":["/home/manish/game/src/components/Carousel.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport \"./Carousel.css\";\n\nexport const CarouselItem = ({ children, width }) => {\n  return (\n    <div className='carousel-item' style={{width: width}}>\n      {children}\n    </div>\n  )\n}\n\nconst Carousel = ({ children }) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const updateIndex = (newIndex) => {\n    if (newIndex < 0) {\n      newIndex = 0;\n    }\n    else if (newIndex >= React.Children.count(children)) {\n      newIndex = React.Children.count(children) - 1;\n    }\n  }\n  return (\n    <div className=\"carousel\">\n      <div className=\"inner\" \n        style={{ transform: `translateX(-${activeIndex * 100}%`}}>\n        {React.Children.map(children, (child, index) => {\n          return React.cloneElement(child, {width: \"100%\"});\n        })}\n      </div>\n      <div className='indicators'>\n        <button \n          onClick={() => updateIndex(activeIndex - 1)} \n        >\n          Prev\n        </button>\n        <button\n          onClick={() => updateIndex(activeIndex + 1)} \n        >\n          Next\n        </button>\n      </div>\n    </div>\n  )\n}\nexport default Carousel;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,OAAO,MAAMC,YAAY,GAAGC,IAAA,IAAyB;EAAA,IAAxB;IAAEC,QAAQ;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAC9C,oBACEF,OAAA;IAAKK,SAAS,EAAC,eAAe;IAACC,KAAK,EAAE;MAACF,KAAK,EAAEA;IAAK,CAAE;IAAAD,QAAA,EAClDA;EAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAAC,EAAA,GANYV,YAAY;AAQzB,MAAMW,QAAQ,GAAGC,KAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEX;EAAS,CAAC,GAAAU,KAAA;EAC5B,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMmB,WAAW,GAAIC,QAAQ,IAAK;IAChC,IAAIA,QAAQ,GAAG,CAAC,EAAE;MAChBA,QAAQ,GAAG,CAAC;IACd,CAAC,MACI,IAAIA,QAAQ,IAAIrB,KAAK,CAACsB,QAAQ,CAACC,KAAK,CAACjB,QAAQ,CAAC,EAAE;MACnDe,QAAQ,GAAGrB,KAAK,CAACsB,QAAQ,CAACC,KAAK,CAACjB,QAAQ,CAAC,GAAG,CAAC;IAC/C;EACF,CAAC;EACD,oBACEH,OAAA;IAAKK,SAAS,EAAC,UAAU;IAAAF,QAAA,gBACvBH,OAAA;MAAKK,SAAS,EAAC,OAAO;MACpBC,KAAK,EAAE;QAAEe,SAAS,EAAG,eAAcN,WAAW,GAAG,GAAI;MAAE,CAAE;MAAAZ,QAAA,EACxDN,KAAK,CAACsB,QAAQ,CAACG,GAAG,CAACnB,QAAQ,EAAE,CAACoB,KAAK,EAAEC,KAAK,KAAK;QAC9C,oBAAO3B,KAAK,CAAC4B,YAAY,CAACF,KAAK,EAAE;UAACnB,KAAK,EAAE;QAAM,CAAC,CAAC;MACnD,CAAC;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNV,OAAA;MAAKK,SAAS,EAAC,YAAY;MAAAF,QAAA,gBACzBH,OAAA;QACE0B,OAAO,EAAEA,CAAA,KAAMT,WAAW,CAACF,WAAW,GAAG,CAAC,CAAE;QAAAZ,QAAA,EAC7C;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTV,OAAA;QACE0B,OAAO,EAAEA,CAAA,KAAMT,WAAW,CAACF,WAAW,GAAG,CAAC,CAAE;QAAAZ,QAAA,EAC7C;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAI,EAAA,CAhCKF,QAAQ;AAAAe,GAAA,GAARf,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}